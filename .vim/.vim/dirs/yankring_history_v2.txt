        sprintf(topo_file+strlen(topo_file),"%d %d %d\n",a.nodeId,a.nodeId,a.flowDesired);,V
remote branch that 'git pull' uses to update the current branch.,V
http://blog.csdn.net/laogaoav/article/details/17717549,v
//github.com/zzqq2199/myvimcfg.git,v
    ,V
    },V
 ,v
D,v
    dd,V
    cout<<numNode<<' '<<numEdge<<' '<<numConsumeNode<<endl;,V
    cout<<a;,V
    a+=2+3;,V
    int a=1;,V
        cout<<i<<' '<<consumeNodes[i].nodeId<<' '<<consumeNodes[i].flowDesired<<endl;,V
    ddfor(int i=0;i<numConsumeNode;i++){,V
    return 0;,V
    cout<<s<<endl;,V
    s=(char*)"abcdefg";,V
    char *s;,V
        printf("%s",topo[i]);,V
    for (int i=0;i<line_num;i++){,V
source ~/z.sh,V
    printf(s);,V
,V
    {,V
fi,V
</code>,v
fi</code>,V
<code class="hljs bash"># Copyright (c) 2009 rupa deadwyler under the WTFPL license,V
# maintains a jump-list of the directories you actually use,V
 ,V
set encoding=prc,V
set termencoding=utf-8,V
set fileencodings=utf-8,gbk,V
0,v
LANG="en_US.UTF-8",V
A,v
b.close(),V
IngredientsList=[    ('CA','beef',30),    ('CA','tomato',50),    ('CA','cumin',5),    ('CB','cumin',10),    ('CB','pork',30),    ('CB','butter',5),    ('CB','rice',15),    ('JA','rice',50),    ('JA','fish',30),    ('JA','butter',16),    ('IA','beef',45),    ('IA','butter',20),    ('IA','rice',30),    ('IB','pork',30),    ('IB','cumin',10),    ('IB','cabbage',20)]for food,ingredient,quantity in IngredientsList:    food="'"+food+"'"    ingredient="'"+ingredient+"'"    sql='''insert into Ingredients            (food,ingredient,quantity)            values            ({},{},{})'''.format(food,ingredient,quantity)    try:        cursor.execute(sql)        db.commit()    except:        print('Error happened when executing sql: ')        print(sql)        db.rollback()Calories=[    ('beef',2,500),    ('butter',1,750),    ('cumin',2,35),    ('pork',1,330),    ('rice',10,700),    ('fish',1,180),    ('cabbage',5,50),    ('tomato',1,30)]for ingredient,quantity,calories in Calories:    ingredient="'"+ingredient+"'"    sql='''insert into Calories            (ingredient,quantity,calories)            values            ({},{},{})'''.format(ingredient,quantity,calories)    try:        cursor.execute(sql)        db.commit()    except:        print('Error happened when executing sql: ')        print(sql)        db.rollback()d,v
for license,owner,model in CarsList:    license="'"+license+"'"    owner="'"+owner+"'"    model="'"+model+"'"    sql='''insert into Cars            (license,owner,model)            values            ({},{},{})'''.format(license,owner,model)    cursor.execute(sql)    db.commit(),v
ddprint(CarsList),V
('M011','P2','M7'),('M012','P3','M8'),('M013','P4','M7'),('M014','P4','M8'),V
raise SystemExit,V
CarsList=[('C011','P1','M1'),('C012','P3','M1'),('C013','P4','M3'),('C014','P4','M2'),('C015','P5','M3')],V
CarsList=[('C011','P1','M1'),('C012','P3','M1'),('C013','P4','M3'),('C014','P4','M2'),('C015','P5','M3'),V
('C011','P1','M1')('C012','P3','M1')('C013','P4','M3')('C014','P4','M2')('C015','P5','M3'),V
       ('C015','P5','M3'),V
      ('C014','P4','M2'),V
     ('C013','P4','M3'),V
    ('C012','P3','M1'),V
    ('('C011','P1','M1'),V
    ('C011','P1','M1'),,V
        db.rollback(),V
        print(sql),V
        print('Error happened when executing sql: '),V
    except:,V
        db.commit(),V
        cursor.execute(sql),V
    try:,V
            ({},{})'''.format(food,cuisine),V
            values,V
            (food,cuisine),V
    sql='''insert into Dish,V
for food,cuisine in DishList:,V
],V
    ("'IB'","'Indian'"),V
    ("'IA'","'Indian'"),,V
    ("'JA'","'Japanese'"),,V
    ("'CB'","'Chinese'"),,V
    ("'CA'","'Chinese'"),,V
DishList=[,V
cursor.execute(sql),V
        )''',V
        quantity int,V
        ingredient varchar(20),,V
        cuisine varchar(20),,V
sql='''create table ShoppingList(,V
        calories int not null,V
        quantity int not null,,V
        ingredient varchar(20) not null,,V
sql='''create table Calories(,V
        quantity int not null,V
        food varchar (20) not null,,V
sql='''create table Ingredients(,V
        cuisine varchar(20),V
        food varchar(20) not null,,V
sql='''create table Dish(,V
toCreateList=['Dish','Ingredients','Calories','ShoppingList'],V
abcdefg,V
 update Ingredients set quantity=16 where ingredient='butter' and quantity>16;,v
,v
"abcdefgselect a.cuisine from Dish a join Ingredients b on a.food=b.food where b.ingredient='cumin' group by cuisine",V
abcdefg,v
select a.cuisine from Dish a join Ingredients b on a.food=b.food where b.ingredient='cumin' group by cuisine;,V
db.close(),V
    QNo=QNo+1;,V
    print('{}.answer: {}'.format(chr(QNo),results)),V
    results=cursor.fetchall(),V
    cursor.execute(sql),V
for sql in sqlList:,V
